{"mappings":"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","sources":["src/server.js","src/Data/data.js","src/Data/Schema/CountrySchema.js","src/Data/Schema/YachtSchema.js","src/Data/Schema/LocationsSchema.js","src/Data/Schema/RegionSchema.js","src/routes.js"],"sourcesContent":["import express from \"express\"\nimport mongoose from \"mongoose\"\nimport { getDB } from \"./Data/data.js\"\nimport path from \"path\"\nimport {\n  getYachts,\n  getLocations,\n  getCountries,\n  getRegions,\n  getLocationsById,\n} from \"./routes.js\"\n\n///////////////////////////////////////\n// Set Up\nconst port = 3100\nconst __dirname = path.resolve()\n// Подключение к БД\nmongoose\n  .connect(\n    \"mongodb+srv://admin:admin@cluster0.5zy4l.mongodb.net/yacht?retryWrites=true&w=majority\"\n  )\n  .then(() => console.log(\"DB ok!\"))\n  .then(() => {\n    app.listen(port, (err) => {\n      if (err) return console.log(err)\n      console.log(\"Server OK on  port \" + port)\n    })\n  })\n  .catch((err) => console.log(\"DB not ok\", err))\n\n// Обновление БД\ngetDB()\nsetInterval(getDB, 36000000)\n\n// Подключение Express\nconst app = express()\napp.use(express.json())\napp.use(express.static(\"/build/\"))\n// Роуты\n\napp.get(\"/api/yachts\", getYachts)\napp.get(\"/api/country\", getCountries)\napp.get(\"/api/region\", getRegions)\napp.get(\"/api/locations\", getLocations)\napp.get(\"/api/locations/:id\", getLocationsById)\napp.get(\"*\", function (req, res) {\n  res.sendFile(\n    path.join(__dirname, \"../../yachts/build/index.html\"),\n    function (err) {\n      if (err) {\n        res.status(500).send(err)\n      }\n    }\n  )\n})\n\n// Запуск сервака\n\n////////////////////////////////////\n","import express from \"express\"\n\nimport countrySchema from \"./Schema/CountrySchema.js\"\n\nimport yachtSchema from \"./Schema/YachtSchema.js\"\nimport locationsSchema from \"./Schema/LocationsSchema.js\"\nimport axios from \"axios\"\nimport regionSchema from \"./Schema/RegionSchema.js\"\n\nexport const getDB = function () {\n  console.log(\"Fetching Data\")\n\n  // Options for requests\n  const user = {\n    username: \"rest232@TTTTT\",\n    password: \"5bTXJF82\",\n  }\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(user),\n  }\n\n  ///////////////\n\n  // Yachts\n\n  axios\n    .post(\n      \"http://ws.nausys.com/CBMS-external/rest/catalogue/v6/yachts/102701\",\n      user\n    )\n\n    .then((response) => {\n      response.data.yachts.map(async (yacht) => {\n        let yachts = new yachtSchema(yacht)\n        const data = await yachtSchema.findOne({ id: yacht.id }).exec()\n        if (data) return\n\n        yachts.save()\n      })\n    })\n    .then(console.log(\"1. Yacts done\"))\n    .catch(\"Some Error occured in yacts\")\n\n  // Locations\n  axios\n    .post(\n      \"http://ws.nausys.com/CBMS-external/rest/catalogue/v6/locations\",\n      user\n    )\n\n    .then((response) => {\n      response.data.locations.map(async (loc) => {\n        let locations = new locationsSchema(loc)\n        const data = await locationsSchema.findOne({ id: loc.id }).exec()\n        if (data) return\n\n        locations.save()\n      })\n    })\n    .then(console.log(\"2. Locations done\"))\n    .catch(\"Some Error occured in locations\")\n\n  // Countries\n  axios\n    .post(\n      \"http://ws.nausys.com/CBMS-external/rest/catalogue/v6/countries\",\n      user\n    )\n    .then((response) => {\n      response.data.countries.map(async (loc) => {\n        let country = new countrySchema(loc)\n        const data = await countrySchema.findOne({ id: loc.id }).exec()\n        if (data) return\n\n        country.save()\n      })\n    })\n    .then(console.log(\"3. Countries done\"))\n    .catch(\"Some Error occured in Countries\")\n\n  // Regions\n  axios\n    .post(\"http://ws.nausys.com/CBMS-external/rest/catalogue/v6/regions\", user)\n    .then((response) => {\n      response.data.regions.map(async (loc) => {\n        let region = new regionSchema(loc)\n        const data = await regionSchema.findOne({ id: loc.id }).exec()\n        if (data) return\n\n        region.save()\n      })\n    })\n    .then(console.log(\"4. Regions done\"))\n    .catch(\"Some Error occured in Regions\")\n\n  // EquipmentCategory\n}\n///////////////////////////\n","import mongoose from \"mongoose\"\n\nconst subSchema = new mongoose.Schema({\n  textEN: String,\n  textRU: String,\n})\n\nlet schema = new mongoose.Schema({\n  id: Number,\n  code: String,\n  name: subSchema,\n})\n\nlet countrySchema = mongoose.model(\"Country\", schema)\n\nexport default countrySchema\n","import mongoose from \"mongoose\"\n\nlet schema = new mongoose.Schema({\n  baseId: Number,\n  berthsCabin: Number,\n  berthsCrew: Number,\n  berthsSalon: Number,\n  berthsTotal: Number,\n  buildYear: Number,\n  cabins: Number,\n  cabinsCrew: Number,\n  canMakeBookingFixed: Boolean,\n  charterType: String,\n  checkInPeriods: Array,\n  commission: Number,\n  companyId: Number,\n  deposit: Number,\n  depositCurrency: String,\n  depositWhenInsured: Number,\n  draft: Number,\n  engineBuilderId: Number,\n  enginePower: Number,\n  engines: Number,\n  flagsId: Array,\n  fourStarCharter: Boolean,\n\n  id: Number,\n  internalUse: Boolean,\n  locationId: Number,\n  mainPictureUrl: String,\n  maxPersons: Number,\n  name: String,\n  needsOptionApproval: Boolean,\n  numberOfRudderBlades: Number,\n  pictures: Array,\n  picturesURL: Array,\n  sailTypeId: Number,\n  seasonSpecificData: Array,\n  standardYachtEquipment: Array,\n  waterTank: Number,\n  wc: Number,\n  wcCrew: Number,\n  yachtModelId: Number,\n})\n\nlet yachtSchema = mongoose.model(\"Yacht\", schema)\n\nexport default yachtSchema\n","import mongoose from \"mongoose\"\n\nconst subSchema = new mongoose.Schema({\n  textEN: String,\n  textRU: String,\n})\n\nlet schema = new mongoose.Schema({\n  id: Number,\n  lat: Number,\n  lon: Number,\n  name: subSchema,\n  regionId: Number,\n})\n\nlet locationsSchema = mongoose.model(\"Location\", schema)\n\nexport default locationsSchema\n","import mongoose from \"mongoose\"\n\nconst subSchema = new mongoose.Schema({\n  textEN: String,\n  textRU: String,\n})\n\nlet schema = new mongoose.Schema({\n  id: Number,\n  countryId: Number,\n  name: subSchema,\n})\n\nlet regionSchema = mongoose.model(\"Region\", schema)\n\nexport default regionSchema\n","import yachtSchema from \"./Data/Schema/YachtSchema.js\"\nimport locationsSchema from \"./Data/Schema/LocationsSchema.js\"\nimport countrySchema from \"./Data/Schema/CountrySchema.js\"\nimport regionSchema from \"./Data/Schema/RegionSchema.js\"\n\nexport const getYachts = async (req, res) => {\n  try {\n    const yachts = await yachtSchema.find()\n    res.send(yachts)\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({\n      message: \"Не удалось загрузить список\",\n    })\n  }\n}\n\nexport const getCountries = async (req, res) => {\n  try {\n    const country = await countrySchema.find()\n\n    res.send(country)\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({\n      message: \"Не удалось загрузить список\",\n    })\n  }\n}\n\nexport const getRegions = async (req, res) => {\n  try {\n    const region = await regionSchema.find()\n\n    res.send(region)\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({\n      message: \"Не удалось загрузить список\",\n    })\n  }\n}\n\nexport const getLocations = async (req, res) => {\n  try {\n    const locations = await locationsSchema.find()\n\n    res.send(locations)\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({\n      message: \"Не удалось загрузить список\",\n    })\n  }\n}\n\nexport const getLocationsById = async (req, res) => {\n  try {\n    const location = await locationsSchema.find({ id: req.params.id })\n\n    res.send(location)\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({\n      message: \"Не удалось загрузить список\",\n    })\n  }\n}\n"],"names":[],"version":3,"file":"index.js.map"}